version: "2"
services:
  lorawan-application-server:
    build: 
      context: .
      dockerfile: Dockerfile-devel
    volumes:
      - ./:/lorawan-application-server
      # - ../lorawan-api:/lorawan-api
    links:
      - postgres
      - redis
      - mosquitto
      - rabbitmq
      - zookeeper
      - kafka
    environment:
      - TEST_POSTGRES_DSN=postgres://lorawan_as:lorawan_as@postgres/lorawan_as?sslmode=disable
      - TEST_POSTGRES_INTEGRATION_DSN=postgres://lorawan_integration:lorawan_integration@postgres/lorawan_integration?sslmode=disable
      - TEST_REDIS_SERVERS=redis:6379
      - TEST_MQTT_SERVER=tcp://mosquitto:1883
      - TEST_RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - TEST_KAFKA_BROKER=kafka:9092

  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./.docker-compose/postgresql/initdb:/docker-entrypoint-initdb.d

  redis:
    image: redis:6-alpine

  mosquitto:
    image: eclipse-mosquitto:1.6

  rabbitmq:
    image: rabbitmq:3-alpine

  zookeeper:
    image: 'bitnami/zookeeper:3'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:2'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
